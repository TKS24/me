variable "bucket_name" {
  type        = string
  description = "The name of the S3 bucket for backups"
  default     = "backup-bucket"
}

variable "backup_vault_name" {
  type        = string
  description = "The name of the AWS Backup vault"
  default     = "backup-vault"
}

variable "backup_plan_name" {
  type        = string
  description = "The name of the AWS Backup plan"
  default     = "backup-plan"
}

variable "backup_role_name" {
  type        = string
  description = "The name of the IAM role for AWS Backup"
  default     = "backup-role"
}

variable "config_rule_name" {
  type        = string
  description = "The name of the AWS Config rule for backup requirements"
  default     = "backup-rule"
}







resource "aws_s3_bucket" "backup_bucket" {
  bucket = var.bucket_name
  acl    = "private"

  tags = {
    Name = "Backup Bucket"
  }
}

resource "aws_backup_vault" "backup_vault" {
  name = var.backup_vault_name
}

resource "aws_backup_plan" "backup_plan" {
  name        = var.backup_plan_name
  rule_count  = 1
 rule {
    rule_name         = "weekly-full-backups"
    target_backup_vault_name = aws_backup_vault.backup_vault.name
    schedule          = "cron(0 0 ? * 7 *)" # every Sunday at midnight UTC
    start_window_minutes = 60
    completion_window_minutes = 1440 # 24 hours
    lifecycle {
      cold_storage_after_days = 30
      delete_after_days = 90
    }
  }

  rule {
    rule_name         = "daily-differential-backups"
    target_backup_vault_name = aws_backup_vault.backup_vault.name
    schedule          = "cron(0 0 ? * * *)" # every day at midnight UTC
    start_window_minutes = 60
    completion_window_minutes = 720 # 12 hours
    lifecycle {
      cold_storage_after_days = 30
      delete_after_days = 90
    }
    selection {
      selection_type = "STRING"
      selection_pattern = "/"
      iam_role_arn = aws_iam_role.backup_role.arn
    }
  }

  advanced_backup_setting {
    resource_type = "EC2"
    backup_options {
      resource_type = "EC2"
      backup_plan_id = aws_backup_plan.backup_plan.id
      advanced_backup_settings {
        resource_backup_option {
          backup_resource_type = "EFS"
          backup_resource_options {
            efs_file_system_type = "All"
          }
        }
      }
    }
  }
}
}

resource "aws_backup_selection" "backup_selection" {
  name              = "backup-selection"
  iam_role_arn      = aws_iam_role.backup_role.arn
  plan_id           = aws_backup_plan.backup_plan.id
  selection_type    = "STRING"
  selection_pattern = "/"
}

resource "aws_iam_role" "backup_role" {
  name = var.backup_role_name

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "backup.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_config_config_rule" "backup_rule" {
  name        = var.config_rule_name
  description = "Management policy requires that the information system performs full backups weekly. Incremental or differential backups should be performed daily. Data must also be replicated across multiple geographic zones in a way that aligns with industry best practices and ensures the durability, integrity, and availability of the scope in scope data."

  source {
    owner             = "AWS"
    source_identifier = "BACKUP_PLAN_RULES"
  }

  input_parameters = jsonencode({
    BackupPlanId           = aws_backup_plan.backup_plan.id
    BackupVaultName        = aws_backup_vault.backup_vault.name
    BackupType             = "FULL"
    BackupSchedule         = "cron(0 0 ? * 7 *)"
    LifecycleDeleteAfter   = 90
    Replication            = "MULTI-REGION"
    DataIntegrity          = "BEST_PRACTICES"
    BackupSelectionName    = aws_backup_selection.backup_selection.name
    S3BucketName           = aws_s3_bucket.backup_bucket.id
  })

  maximum_execution_frequency = "TwentyFour_Hours"
}
