provider "aws" {
  region = var.region
}

resource "aws_config_config_rule" "protect_audit_tools" {
  name        = var.rule_name
  description = var.rule_description

  source {
    owner             = "AWS"
    source_identifier = "ACCESS_KEYS_ROTATED"
  }

  input_parameters = jsonencode({
    "auditToolsAccessProtection" = {
      "logicalResourceId" = var.rule_logical_resource_id
      "parameterValues" = {
        "protectAuditTools" = var.rule_protect_audit_tools
      }
    }
  })

  depends_on = [
    aws_iam_policy.audit_tools_protection_policy
  ]
}

resource "aws_iam_policy" "audit_tools_protection_policy" {
  name   = var.policy_name
  policy = jsonencode(var.policy_document)
}

resource "aws_iam_policy_attachment" "audit_tools_protection_policy_attachment" {
  name       = var.policy_attachment_name
  policy_arn = aws_iam_policy.audit_tools_protection_policy.arn
  groups     = var.policy_attachment_groups
}





provider "aws" {
  region = var.region
}

resource "aws_config_config_rule" "protect_audit_tools" {
  name        = var.rule_name
  description = var.rule_description

  source {
    owner             = "AWS"
    source_identifier = "ACCESS_KEYS_ROTATED"
  }

  input_parameters = jsonencode({
    "auditToolsAccessProtection" = {
      "logicalResourceId" = var.rule_logical_resource_id
      "parameterValues" = {
        "protectAuditTools" = var.rule_protect_audit_tools
      }
    }
  })

  depends_on = [
    aws_iam_policy.audit_tools_protection_policy
  ]
}

resource "aws_iam_policy" "audit_tools_protection_policy" {
  name   = var.policy_name
  policy = jsonencode(var.policy_document)
}

resource "aws_iam_policy_attachment" "audit_tools_protection_policy_attachment" {
  name       = var.policy_attachment_name
  policy_arn = aws_iam_policy.audit_tools_protection_policy.arn
  groups     = var.policy_attachment_groups
}
